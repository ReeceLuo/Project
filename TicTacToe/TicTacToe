import java.util.Scanner;

public class TicTacToe {
    public static void main(String[] args) {
        Scanner console = new Scanner(System.in);

        String player1 = getPlayer(console, 1);
        String player2 = getPlayer(console, 2);

        instructions(player1, player2);

        runGame(console, player1, player2);

    }

    public static String getPlayer(Scanner console, int playerNum) {
        System.out.print("Enter Player " + playerNum + " name: ");
        return console.nextLine().trim();
    }

    public static void instructions(String p1, String p2) {
        System.out.println();
        System.out.println(p1 + " and " + p2 + " will play a game of Tic-Tac-Toe.\n");
        System.out.println("To play, enter the row and column you want to mark (ex: A2).");
        System.out.println("Have fun!\n");
    }

    public static void runGame(Scanner console, String p1, String p2) {
        int p1Wins = 0;
        int p2Wins = 0;

        boolean play = true;

        while (play) {

            boolean game = true;

            int[][] board = new int[3][3];
            printBoard(board);                               

            int turnCount = 1;

            while (game) {

                board = board(p1, p2, board, turnCount, console);

                printBoard(board);

                turnCount++;

                int checkWin = checkWin(board);
                if (checkWin == 1) {
                    System.out.println(p1 + " wins!");
                    p1Wins++;
                    game = false;
                } else if (checkWin == 2) {
                    System.out.println(p2 + " wins!");
                    p2Wins++;
                    game = false;
                } else if (checkWin == 0) {
                    System.out.println("Tie!");
                    game = false;
                }
            }
            play = askPlayAgain(console);
        }

        displayResults(p1Wins, p2Wins, p1, p2);
    }

    public static int[][] board(String p1, String p2, int[][] board, int turnCount, Scanner console) {

        if (turnCount % 2 == 1) {
            System.out.println(p1 + "'s turn\n");
        } else if (turnCount % 2 == 0) {
            System.out.println(p2 + "'s turn\n");
        }

        boolean validInput = false;

        while (!validInput) {
            System.out.print("Enter your move: ");
            String userInput = console.nextLine();
            int[] inputArray = getInput(userInput);

            while (inputArray[0] == -1 || inputArray[1] == -1) {
                System.out.println("Not a valid move.");
                System.out.print("Enter your move: ");
                userInput = console.nextLine();
                inputArray = getInput(userInput);
            }

            if (board[inputArray[1]][inputArray[0]] == 0 && turnCount % 2 == 1) {                // checks for empty square, marks p1
                board[inputArray[1]][inputArray[0]] = 1;
                validInput = true;
            } else if (board[inputArray[1]][inputArray[0]] == 0 && turnCount % 2 == 0) {         // checks for empty square, marks p2
                board[inputArray[1]][inputArray[0]] = 2;
                validInput = true;
            } else {
                System.out.println("Square already taken.");
            }
        }

        return board;
    }

    public static int[] getInput (String userInput) {
        int[] arrayInput = new int[2];

        if (userInput.length() != 2 || !Character.isDigit(userInput.charAt(1))) {
            arrayInput[0] = -1;
            arrayInput[1] = -1;
            return arrayInput;
        }

        String input = Character.toUpperCase(userInput.charAt(0)) + userInput.substring(1);

        if (input.charAt(0) == 'A') {
            arrayInput[0] = 0;
        } else if (input.charAt(0) == 'B') {
            arrayInput[0] = 1;
        } else if (input.charAt(0) == 'C') {
            arrayInput[0] = 2;
        } else {
            arrayInput[0] = -1;
        }

        int rowNum = Integer.parseInt(input.substring(1));

        if (rowNum >= 1 && rowNum <= 3) {
            arrayInput[1] = rowNum - 1;
        } else {
            arrayInput[1] = -1;
        }

        return arrayInput;
    }

    public static void printBoard(int[][] board) {

        String p1Mark = "❌";
        String p2Mark = "⭕";

        System.out.println("        A          B          C");
        System.out.println("   ----------------------------------");
        System.out.println("   |          |          |          |");

        String[][] printedBoard = new String[3][3];

        for (int i = 0; i < printedBoard.length; i++) {
            System.out.print((i + 1) + "  ");
            for (int j = 0; j < printedBoard.length; j++) {
                printedBoard[i][j] = "|          ";
                if (board[i][j] == 1) {
                    printedBoard[i][j] = "|    " + p1Mark + "    ";
                }
                if (board[i][j] == 2) {
                    printedBoard[i][j] = "|    " + p2Mark + "    ";
                }
                System.out.print(printedBoard[i][j]);
            }
            System.out.println("|");
            System.out.println("   |          |          |          |");
            System.out.println("   ----------------------------------");
            if (i < 2) {
                System.out.println("   |          |          |          |");
            }
        }
    }

    public static int checkWin(int[][] board) {

        if ((board[0][0] == 1 && board[0][1] == 1 && board[0][2] == 1) ||                       // rows (p1)
                (board[1][0] == 1 && board[1][1] == 1 && board[1][2] == 1) ||
                (board[2][0] == 1 && board[2][1] == 1 && board[2][2] == 1)) {
            return 1;
        } else if ((board[0][0] == 1 && board[1][0] == 1 && board[2][0] == 1) ||                // columns (p1)
                (board[0][1] == 1 && board[1][1] == 1 && board[2][1] == 1) ||
                (board[0][2] == 1 && board[1][2] == 1 && board[2][2] == 1)) {
            return 1;
        }

        if ((board[0][0] == 2 && board[0][1] == 2 && board[0][2] == 2) ||                       // rows (p2)
                (board[1][0] == 2 && board[1][1] == 2 && board[1][2] == 2) ||
                (board[2][0] == 2 && board[2][1] == 2 && board[2][2] == 2)) {
            return 2;
        } else if ((board[0][0] == 2 && board[1][0] == 2 && board[2][0] == 2) ||                // columns (p2)
                (board[0][1] == 2 && board[1][1] == 2 && board[2][1] == 2) ||
                (board[0][2] == 2 && board[1][2] == 2 && board[2][2] == 2)) {
            return 2;
        }

        if ((board[0][0] == 1 && board[1][1] == 1 && board[2][2] == 1) ||                       // diagonals (p1)
                (board[0][2] == 1 && board[1][1] == 1 && board[2][0] == 1)) {
            return 1;
        }

        if ((board[0][0] == 2 && board[1][1] == 2 && board[2][2] == 2) ||                       // diagonals (p1)
                (board[0][2] == 2 && board[1][1] == 2 && board[2][0] == 2)) {
            return 2;
        }

        for (int i = 0; i < board.length; i++) {                                                // checks if board is full (tie)
            for (int j = 0; j < board.length; j++) {
                if (board[i][j] == 0) {
                    return -1;
                }
            }
        }

        return 0;
    }

    public static boolean askPlayAgain(Scanner console) {

        boolean validInput = false;
        boolean input = true;

        System.out.println();
        while (!validInput) {
            System.out.print("Would you like to play again? (Yes/No): ");
            String answer = console.next();
            console.nextLine();                                                                // clears scanner token

            if (answer.equalsIgnoreCase("Yes")) {
                System.out.println("Play again.");
                input = true;
                validInput = true;
            } else if (answer.equalsIgnoreCase("No")) {
                System.out.println("Game over.");
                input = false;
                validInput = true;
            } else {
                System.out.println("Not an answer.");
            }
        }

        return input;
    }

    public static void displayResults(int p1Wins, int p2Wins, String p1, String p2) {
        System.out.println();
        System.out.println("Final Results.....");
        System.out.println();
        System.out.print(p1 + " ended with " + p1Wins);
        if (p1Wins == 1) {
            System.out.println(" win.");
        } else {
            System.out.println(" wins.");
        }
        System.out.print(p2 + " ended with " + p2Wins);
        if (p2Wins == 1) {
            System.out.println(" win.");
        } else {
            System.out.println(" wins.");
        }
        System.out.println();
        if (p1Wins > p2Wins) {                                                              // fencepost
            System.out.println("Congrats " + p1 + "!");
        } else if (p1Wins < p2Wins) {
            System.out.println("Congrats " + p2 + "!");
        } else {
            System.out.println("Tie.");
        }
    }
}
